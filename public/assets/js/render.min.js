$(document).ready(function() {
    let animate = true;
    let selector = 'last24h';
    let lastPrice = 9999;
    let lastCost = 9999;
    let infos = [];
    let infos_idx = 0;
    let info_timer = -1;
    
    if(typeof $.getUrlVar('reset') !== 'undefined') {
        window.localStorage.removeItem('msg');
    }
    
    if(typeof $.getUrlVar('s') !== 'undefined') {
        selector = $.getUrlVar('s');
        if(selector == 'last24h') {
            $('#selectorLabel').html("Die letzten 24 Stunden");
        }
        if(selector == 'last7d') {
            $('#selectorLabel').html("Die letzten 7 Tage");
        }
        if(selector == 'last30d') {
            $('#selectorLabel').html("Die letzten 30 Tage");
        }
        if(selector == 'last365d') {
            $('#selectorLabel').html("Die letzten 365 Tage");
        }
    } else {
         $('#selectorLabel').html("Die letzten 24 Stunden");
    }
   const updateInfo = function() {
   }
   const render = function() {
         if((typeof window.localStorage.getItem('msg') !== 'undefined') && (window.localStorage.getItem('msg') !== null)) {
           let data = JSON.parse(window.localStorage.getItem('msg'));           
          if(lastPrice !== data.stats[selector].energyPrice_kwh) {
                 if(lastPrice !== 9999) {
                     if(lastPrice < data.stats[selector].energyPrice_kwh) {
                         $('#priceUp').show();
                         $('#priceDown').hide();
                         $('#energyPrice_kwh').addClass('corrently_orange');
                         $('#energyPrice_kwh').removeClass('corrently_green');
                     }
                     if(lastPrice > data.stats[selector].energyPrice_kwh) {
                         $('#priceUp').hide();
                         $('#priceDown').show();
                         $('#energyPrice_kwh').removeClass('corrently_orange');
                         $('#energyPrice_kwh').addClass('corrently_green');
                     }
                 }
                 lastPrice = data.stats[selector].energyPrice_kwh;
               }
                if(lastCost !== data.stats[selector].incomeSaldo) {
                 if(lastCost !== 9999) {
                     if(lastCost < data.stats[selector].incomeSaldo) {
                         $('#costDown').show();
                         $('#costUp').hide();
                         $('#incomeSaldo').addClass('corrently_green');
                         $('#incomeSaldo').removeClass('corrently_orange');                           
                     }
                     if(lastCost > data.stats[selector].incomeSaldo) {
                         $('#costDown').hide();
                         $('#costUp').show();                         
                         $('#incomeSaldo').addClass('corrently_orange');
                         $('#incomeSaldo').removeClass('corrently_green');                       
                     }
                 }
                 lastCost = data.stats[selector].incomeSaldo;
               }
                
               $('#energyPrice_kwh').html((data.stats[selector].energyPrice_kwh*100).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               
               $('#last24h').html((data.stats.last24h.energyPrice_kwh*100).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               if(typeof data.stats.last7d !== 'undefined') $('#last7d').html((data.stats.last7d.energyPrice_kwh*100).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               
                if(typeof data.stats.last30d !== 'undefined') $('#last30d').html((data.stats.last30d.energyPrice_kwh*100).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));

                if(typeof data.stats.last365d !== 'undefined') $('#last365d').html((data.stats.last365d.energyPrice_kwh*100).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               $('.updateTS').html(new Date(data.time).toLocaleString());
               
               $('#e24h').html((data.stats.last24h.energyRevenue).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               if(typeof data.stats.last7d !== 'undefined') $('#e7d').html((data.stats.last7d.energyRevenue).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               if(typeof data.stats.last30d !== 'undefined') $('#e30d').html((data.stats.last30d.energyRevenue).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               if(typeof data.stats.last365d !== 'undefined') $('#e365d').html((data.stats.last365d.energyRevenue).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               
               $('#a24h').html((data.stats.last24h.energySpendings).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               if(typeof data.stats.last7d !== 'undefined') $('#a7d').html((data.stats.last7d.energySpendings).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               if(typeof data.stats.last30d !== 'undefined') $('#a30d').html((data.stats.last30d.energySpendings).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               if(typeof data.stats.last365d !== 'undefined') $('#a365d').html((data.stats.last365d.energySpendings).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               
               $('#incomeSaldo').html((data.stats[selector].incomeSaldo*(-1)).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));               
               $('#s24h').html((data.stats.last24h.incomeSaldo*(-1)).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}));
               if(typeof data.stats.last7d !== 'undefined') $('#s7d').html((data.stats.last7d.incomeSaldo*(-1)).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2})) else  $('.row7d').hide(); 
               if(typeof data.stats.last30d !== 'undefined') $('#s30d').html((data.stats.last30d.incomeSaldo*(-1)).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2})); else  $('.row30d').hide(); 
               if(typeof data.stats.last365d !== 'undefined') $('#s365d').html((data.stats.last365d.incomeSaldo*(-1)).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2})); else  $('.row365dd').hide(); 
               
               document.title = ""+(data.stats[selector].energyPrice_kwh*100).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2})+"/kWh " + (data.stats[selector].incomeSaldo*(-1)).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}) + "/Tag";
               
               let ctx = $('#einnahmenChart');
               
               let edonut_data = [];
               let elabels = [];
               
               edonut_data.push(data.stats[selector].energySavingsSelf);
               elabels.push("Eigenstrom");
               
               edonut_data.push(data.stats[selector].energyIncome);
               elabels.push("Einspeisung");
               
               edonut_data.push(data.stats[selector].correntlyIncome);
               elabels.push("Corrently Erzeugung");                              
               
               let myChartE = new Chart(ctx, {
                  type: 'doughnut',
                  data: {
                    datasets: [{
                        label: 'Einnahmen Verteilung',
                        data: edonut_data,
                        backgroundColor: [
                          '#006c32',
                          '#318b4e',
                          '#86df9b'
                        ]
                    }],
                    labels: elabels
                  },
                  options: {
                    responsive: true,
                    legend: {
                      position: 'right',
                    },
                    plugins: {
                       datalabels: {
                           display:true,
                           color:'#000000',
                           formatter: function(value, context) {
                                return ((value/data.stats[selector].energyRevenue)*100).toFixed(1).replace('.',',')+"%";
                            }
                       }
                    },
                    title: {
                      display: false,
                      text: ''
                    },
                    animation: {
                      animateScale: animate,
                      animateRotate: animate
                    },
                    tooltips: {
                          enabled: true,
                          mode: 'single',
                          callbacks: {
                            label: function(tooltipItems, data) {
                              return elabels[tooltipItems.index] + ': ' + data.datasets[0].data[tooltipItems.index] + 'â‚¬';
                            }
                          }
                    },
                    elements: {
                        center: {
                          text: (data.stats[selector].energyRevenue).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}),
                          color: '#006C32', // Default is #000000
                          fontStyle: 'Arial', // Default is Arial
                          sidePadding: 20, // Default is 20 (as a percentage)
                          minFontSize: 20, // Default is 20 (in px), set to false and text will not wrap.
                          lineHeight: 25 // Default is 25 (in px), used for when text wraps
                        }
                      }                      
                  }
              });
               
               let ctxa = $('#ausgabenChart');
               
               let donut_data = [];
               let labels = [];
               
               donut_data.push(data.stats[selector].energyCost);
               labels.push("Strombezug");
               
               donut_data.push(data.stats[selector].amortization);
               labels.push("Abschreibung");
               
               donut_data.push(data.stats[selector].baseCosts);
               labels.push("GrundgebÃ¼hr");                              
               
               let myChartA = new Chart(ctxa, {
                  type: 'doughnut',
                  data: {
                    datasets: [{
                        label: 'Ausgaben Verteilung',
                        data: donut_data,
                        backgroundColor: [
                          '#FFA700',
                          '#FF8922',
                          '#FFF6E4'
                        ]
                    }],
                    labels: labels
                  },
                  options: {
                    responsive: true,
                    legend: {
                      position: 'left',
                    },
                    plugins: {
                       datalabels: {
                           display:true,
                           color:'#000000',
                           formatter: function(value, context) {
                                return ((value/data.stats[selector].energySpendings)*100).toFixed(1).replace('.',',')+"%";
                            }
                       }
                    },
                    title: {
                      display: false,
                      text: ''
                    },
                    animation: {
                      animateScale: animate,
                      animateRotate: animate
                    },
                    tooltips: {
                          enabled: true,
                          mode: 'single',
                          callbacks: {
                            label: function(tooltipItems, data) {
                              return labels[tooltipItems.index] + ': ' + data.datasets[0].data[tooltipItems.index] + 'â‚¬';
                            }
                          }
                    },
                    elements: {
                        center: {
                          text: (data.stats[selector].energySpendings).toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2}),
                          color: '#FFA700', // Default is #000000
                          fontStyle: 'Arial', // Default is Arial
                          sidePadding: 20, // Default is 20 (as a percentage)
                          minFontSize: 20, // Default is 20 (in px), set to false and text will not wrap.                          lineHeight: 25 // Default is 25 (in px), used for when text wraps
                        }
                      }                      
                  }
              });
             if(animate) {
                 setTimeout(function() {                                      
                    $('#info').addClass('show');
                 },2000);
             }
              animate = false;
             let costs = (data.stats[selector].consumption_wh * data.meterinfo.energyPriceWh) + data.stats[selector].baseCosts;
             let savings = Math.round((1-(((-1)*data.stats[selector].incomeSaldo)/costs))*(10000))/100;    

            if(info_timer < new Date().getTime() - 60000) {
             //fillGaps();    
             window.swiper.removeAllSlides();
             
                 window.swiper.appendSlide('<div class="blog-slider__item swiper-slide"><div class="blog-slider__content"><div class="blog-slider__title"><i class="fa fa-info-circle" style="  margin-right: 10px;"></i>Ausgaben</div><div class="blog-slider__text" id="info0"><strong>'+Math.round((data.stats[selector].energyCost/data.stats[selector].energySpendings)*100)+'%</strong> der Kosten von '+data.stats[selector].energySpendings.toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2})+'â‚¬ fÃ¼r die Stromversorgung sind variabel, d.h. kÃ¶nnen durch den Verbrauch unmittelbar beeinflusst werden.</div></div></div>');

                 window.swiper.appendSlide('<div class="blog-slider__item swiper-slide"><div class="blog-slider__content"><div class="blog-slider__title"><i class="fa fa-wrench" style="  margin-right: 10px;"></i>Einnahmen</div><div class="blog-slider__text" id="info1">Steigere den Netzbezug zu Zeiten mit hohen Werten des GrÃ¼nstromIndex, um die ErtrÃ¤ge aus Corrently Erzeugung von derzeit <strong>'+data.stats[selector].correntlyIncome.toLocaleString('de-DE',{'minimumFractionDigits':2,'maximumFractionDigits':2})+'â‚¬</strong> zu erÃ¶hen.</div></div></div>');

                 window.swiper.appendSlide('<div class="blog-slider__item swiper-slide"><div class="blog-slider__content"><div class="blog-slider__title"><i class="fa fa-tachometer" style="  margin-right: 10px;"></i>Ersparnis</div><div class="blog-slider__text" id="info1"><strong>'+savings.toLocaleString('de-DE',{'minimumFractionDigits':0,'maximumFractionDigits':2})+'%</strong> im Vergleich zu einem Anschluss ohne eigene Erzeugung, Speicher oder Corrently GrÃ¼nstromBonus.</div></div></div>');
                info_timer = new Date().getTime();
             }
           }
   }
   const update = function() { 
       $.getJSON("/msg",function(data) {       
           window.localStorage.setItem('msg',JSON.stringify(data));
           render();
       });     
   }
   render();
   setInterval(update,10000);
   update();    
});