[{"id":"f6355d59.5bc95","type":"tab","label":"Casa Corrently","disabled":false,"info":""},{"id":"a78dbeae.c89fa","type":"tab","label":"Ebene 0","disabled":false,"info":"## Basisebene\n\n**Beschreibt die unterste Ebene im Corrently Modell und enthält die Erzeugung, sowie der nicht steuerbare Verbrauch**\n\n[Dokumentation](https://casa.corrently.de/books/ebenen-modell/chapter/ebene-0---statusquo)"},{"id":"87ac7176.1bbd1","type":"tab","label":"Ebene 1","disabled":false,"info":"## Flexibilitätsebene\n**Primärer Nutzen der Ebene 1 ist die Bereitstellung von Flexibilitätsoptionen. In diese Kategorie fallen alle steuerbaren und ausgleichenden Ressourcen.**\n\n - Stromspeicher\n - Schaltbare Lasten\n - Geräte der Sektorenkopplung (Wärme)\n - Wallbox / Ladepunkt (E-Mobilität)\n\n[Dokumentation](https://casa.corrently.de/books/ebenen-modell/chapter/ebene-1---flexibilit%C3%A4t-und-speicher)"},{"id":"a2290904.6f84c8","type":"tab","label":"Ebene 2","disabled":false,"info":"**In dieser Ebene befindet sich die Übergabe zum öffentlichen Stromnetz oder dem Stromanbieter.**\n\n[Dokumentation](https://casa.corrently.de/books/ebenen-modell/chapter/ebene-2---netzanschlusspunkt)"},{"id":"2fc787d.0444278","type":"ui_group","z":"","name":"GrünstromIndex","tab":"","order":2,"disp":true,"width":"6","collapse":false},{"id":"a5c97474.215158","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#007533","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#007533","edited":true},"page-titlebar-backgroundColor":{"value":"#007533","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#333333","edited":false},"group-textColor":{"value":"#00c154","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#007533","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Corrently Home Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"MM.DD.YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"209ab310.3f3eac","type":"ui_group","z":"","name":"Fahrplan klassisch","tab":"","order":1,"disp":true,"width":"6","collapse":false},{"id":"1b7b453d.36067b","type":"ui_group","z":"","name":"Charts","tab":"","order":2,"disp":false,"width":"6"},{"id":"72c9e7a.93bed18","type":"ui_group","z":"","name":"Stromkonto - Bilanz","tab":"","order":1,"disp":true,"width":"6","collapse":false},{"id":"1fad2808.d64da8","type":"ui_group","z":"","name":"Group 3","tab":"","order":3,"disp":false,"width":"6"},{"id":"c52ad9bb.919c28","type":"mqtt-broker","z":"","name":"Local Mosquito (Port 1883)","broker":"localhost","port":"1883","clientid":"node-red","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"97d4ea9b.0f17b8","type":"ui_group","z":"","name":"CO2 Emission","tab":"","order":3,"disp":true,"width":"6","collapse":false},{"id":"4c928c3d.8c99f4","type":"ui_group","z":"","name":"GrünstromIndex","tab":"","order":1,"disp":true,"width":"6","collapse":false},{"id":"51d1ff15.de16","type":"ui_group","z":"","name":"Entwicklung","tab":"","order":2,"disp":true,"width":"6","collapse":false},{"id":"87d10735.9d2448","type":"ui_group","z":"","name":"Gauge","tab":"","order":2,"disp":true,"width":"6"},{"id":"4666fd21.867544","type":"persist-store","z":"","filename":"persistenceCO2.json","interval":"60"},{"id":"cfcb661d.2a2e18","type":"persist-store","z":"","filename":"persistenceVoltage.json","interval":"60"},{"id":"50ebd7b3.3b24f8","type":"influxdb","z":"","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"casa","name":"InfluxDB","usetls":false,"tls":""},{"id":"e361baf8.9f27e8","type":"persist-store","z":"","filename":"persistenceProduction.json","interval":"60"},{"id":"e2faa2a2.fe318","type":"ui_group","z":"","name":"Erzeugung","tab":"","order":1,"disp":true,"width":"6","collapse":false},{"id":"f5f975e8.cee108","type":"ui_group","z":"","name":"Verbrauch","tab":"","order":2,"disp":true,"width":"6","collapse":false},{"id":"4d3374b5.141d0c","type":"ui_group","z":"","name":"Saldo/Speicher","tab":"","order":3,"disp":true,"width":"6","collapse":false},{"id":"bcb77c09.3d8ac","type":"ui_group","z":"","name":"Netzanschluss","tab":"","order":4,"disp":true,"width":"6","collapse":false},{"id":"986482d4.29808","type":"mqtt-broker","z":"","name":"Symcon","broker":"192.168.192.31","port":"1024","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"9254a5c.e428458","type":"ui_group","z":"","name":"Erzeugung","tab":"","order":1,"disp":true,"width":"6","collapse":false},{"id":"53ab3786.81c418","type":"ui_group","z":"","name":"Verbrauch","tab":"","order":2,"disp":true,"width":"6","collapse":false},{"id":"6b5fc464.37ca0c","type":"ui_group","z":"","name":"Saldo/Speicher","tab":"","order":3,"disp":true,"width":"6","collapse":false},{"id":"c7ffd5fe.4e7518","type":"ui_group","z":"","name":"Netzanschluss","tab":"","order":4,"disp":true,"width":"6","collapse":false},{"id":"cb13accf.9cc2b","type":"ui_spacer","name":"spacer","group":"e2faa2a2.fe318","order":2,"width":1,"height":"4"},{"id":"6e6646c5.a60d18","type":"ui_group","z":"","name":"Fahrplan Casa","tab":"","order":2,"disp":true,"width":"6","collapse":false},{"id":"bbbbc83d.e12558","type":"fritz-api","z":"","name":"Home","host":"http://192.168.192.1","strictSSL":false},{"id":"966ba58.84d1558","type":"ui_tab","z":"","name":"Einstellungen","icon":"dashboard","disabled":false,"hidden":false},{"id":"2b2edc5f.0d27e4","type":"ui_group","z":"","name":"GrünstromIndex","tab":"966ba58.84d1558","order":1,"disp":true,"width":"6","collapse":false},{"id":"f16f1702.2d8ae8","type":"comment","z":"a78dbeae.c89fa","name":"Erzeugung","info":"","x":600,"y":32,"wires":[]},{"id":"e442a7be.082d18","type":"comment","z":"a78dbeae.c89fa","name":"Nutzung","info":"","x":600,"y":252,"wires":[]},{"id":"135a200d.dbda1","type":"comment","z":"a78dbeae.c89fa","name":"Saldo","info":"","x":590,"y":480,"wires":[]},{"id":"22e4dbac.d56a44","type":"inject","z":"a78dbeae.c89fa","name":"5s","repeat":"10","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"","payloadType":"date","x":90,"y":296,"wires":[[]]},{"id":"e146b4c1.073eb8","type":"function","z":"a78dbeae.c89fa","name":"Wirkleistung","func":"msg.payload = Math.round((msg.payload.power1 + msg.payload.power2 + msg.payload.power3)/1000)\nconst subSUM='Generation';\n\nlet sum = flow.get(subSUM) * 1;\nif(isNaN(sum)) sum = 0;\n\nlet previous = context.get(\"previous\") * 1;\nif(isNaN(previous)) previous = 0;\n\nif(flow.get(\"SaldoID\") != context.get(\"SaldoID\")) {\n    context.set(\"SaldoID\",flow.get(\"SaldoID\"));\n    flow.set(\"Sources\",flow.get(\"Sources\")+1);\n} else {\n    sum -= previous;\n}\nsum += msg.payload;\n\ncontext.set(\"previous\",msg.payload);\nnode.status({text:msg.payload +\" W\"});\nflow.set(subSUM,sum);\nreturn msg;","outputs":1,"noerr":0,"x":1066,"y":72,"wires":[["b4cf0b05.0d8af8"]]},{"id":"ea6d18cb.a69c28","type":"inject","z":"a78dbeae.c89fa","name":"OnInject + 15m","repeat":"900","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":136,"y":75,"wires":[["dcc325af.f454e8"]]},{"id":"dcc325af.f454e8","type":"function","z":"a78dbeae.c89fa","name":"Set SaldoID for Flow","func":"flow.set(\"Consumption\",0);\nflow.set(\"Generation\",0);\nflow.set(\"Sources\",0);\nflow.set(\"SaldoID\",new Date().toLocaleString());\nreturn msg;","outputs":1,"noerr":0,"x":140,"y":140,"wires":[[]]},{"id":"b4cf0b05.0d8af8","type":"link out","z":"a78dbeae.c89fa","name":"zu Saldo Verarbeitung","links":["184dbae1.6af305"],"x":1215,"y":312,"wires":[]},{"id":"184dbae1.6af305","type":"link in","z":"a78dbeae.c89fa","name":"von Einzelsummen","links":["b4cf0b05.0d8af8"],"x":495,"y":580,"wires":[["7293558.507caac"]]},{"id":"7293558.507caac","type":"function","z":"a78dbeae.c89fa","name":"Saldo bilden","func":"if(flow.get(\"Sources\") < 4)  { \n    return;\n} else {    \n    msg.payload = flow.get('Consumption') - flow.get('Generation');\n    flow.set('Saldo',msg.payload);\n    node.status({text:\"P: \"+msg.payload+\" W\"});\n    return msg;\n}","outputs":1,"noerr":0,"x":610,"y":580,"wires":[["e5e68e52.cbf2b","fb3aa0b7.d0a3a","baaa5b49.324b98"]]},{"id":"8987952e.3ca2b8","type":"comment","z":"a78dbeae.c89fa","name":"Datenquelle","info":"","x":330,"y":32,"wires":[]},{"id":"45399197.e9b3a","type":"comment","z":"a78dbeae.c89fa","name":"Trigger","info":"","x":70,"y":32,"wires":[]},{"id":"e5e68e52.cbf2b","type":"function","z":"a78dbeae.c89fa","name":"Sum Erzeugung","func":"msg.payload = flow.get(\"Generation\");\nnode.status({text:\"P: \"+msg.payload+\" W\"});\nreturn msg;","outputs":1,"noerr":0,"x":840,"y":520,"wires":[["a90903d1.8aa89"]]},{"id":"fb3aa0b7.d0a3a","type":"function","z":"a78dbeae.c89fa","name":"Sum Verbrauch","func":"msg.payload = flow.get(\"Consumption\");\nnode.status({text:\"P: \"+msg.payload+\" W\"});\nreturn msg;","outputs":1,"noerr":0,"x":840,"y":580,"wires":[["c3d18ba1.21e3f8"]]},{"id":"baaa5b49.324b98","type":"function","z":"a78dbeae.c89fa","name":"Saldo","func":"msg.payload = flow.get(\"Generation\") - flow.get(\"Consumption\");\nnode.status({text:\"P: \"+msg.payload+\" W\"});\nreturn msg;","outputs":1,"noerr":0,"x":810,"y":640,"wires":[["ecf7450c.72f8f8","156bd78d.c42dd8"]]},{"id":"a90903d1.8aa89","type":"influxdb out","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","name":"e0generation","measurement":"e0generation","precision":"","retentionPolicy":"","x":1430,"y":520,"wires":[]},{"id":"c3d18ba1.21e3f8","type":"influxdb out","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","name":"e0consumption","measurement":"e0consumption","precision":"","retentionPolicy":"","x":1440,"y":580,"wires":[]},{"id":"ecf7450c.72f8f8","type":"influxdb out","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","name":"e0saldo","measurement":"e0saldo","precision":"","retentionPolicy":"","x":1420,"y":640,"wires":[]},{"id":"110dd27d.45091e","type":"comment","z":"a78dbeae.c89fa","name":"Vorhersage","info":"","x":610,"y":700,"wires":[]},{"id":"95a542d1.29b17","type":"influxdb in","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","name":"Generation","query":"SELECT mean(\"value\") FROM \"GSIsolar\" WHERE time>now()-10d GROUP BY time(1h) fill(previous)","rawOutput":false,"precision":"","retentionPolicy":"","x":332,"y":740,"wires":[["b314e498.fc5368"]]},{"id":"6ae66ddd.329794","type":"influxdb in","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","name":"Consumption","query":"SELECT mean(\"value\") FROM \"e0consumption\" WHERE now-3600000 GROUP BY time(1h) fill(previous)","rawOutput":false,"precision":"","retentionPolicy":"","x":330,"y":860,"wires":[["ff72564d.01f558"]]},{"id":"b314e498.fc5368","type":"function","z":"a78dbeae.c89fa","name":"Build Hours Array","func":"// Create empty array if not exists\nlet hours = {};\nfor(let i=0;i<24;i++) {\n    hours[\"h\"+i] = {\n        latest: {},\n        outcome: {\n            sum: 0,\n            cnt: 0,\n            mean: 0,\n            min: 9999999,\n            max:0,\n            min_gsi:999999\n        }\n    };\n}\n\nfor(let i=0;i<msg.payload.length;i++) {\n   let hour = new Date(msg.payload[i].time).getHours();\n   hours[\"h\"+hour].latest.gsi = msg.payload[i].mean + 1;\n}\n\nmsg.hours = hours;\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":740,"wires":[["6a45b5eb.e982ac"]]},{"id":"ff72564d.01f558","type":"function","z":"a78dbeae.c89fa","name":"Build Hours Array","func":"// Create empty array if not exists\nlet hours = {};\nfor(let i=0;i<24;i++) {\n    hours[\"h\"+i] = {\n        latest: {},\n        outcome: {\n            sum: 0,\n            cnt: 0,\n            mean: 0,\n            min: 9999999,\n            max:0,\n            min_gsi:999999\n        }\n    };\n}\n\nfor(let i=0;i<msg.payload.length;i++) {\n   let hour = new Date(msg.payload[i].time).getHours();\n   hours[\"h\"+hour].latest.gsi = msg.payload[i].mean + 1;\n}\n\nmsg.hours = hours;\nreturn msg;","outputs":1,"noerr":0,"x":630,"y":860,"wires":[["3c7b8eb4.270f92"]]},{"id":"9ab82fae.22beb","type":"function","z":"a78dbeae.c89fa","name":"Apply History","func":"let hours = msg.hours;\nfor(let i=0;i<msg.payload.length -1 ;i++) {\n    let hour = new Date(msg.payload[i].time).getHours();\n   hours[\"h\"+hour].outcome.sum += msg.payload[i].mean;\n   hours[\"h\"+hour].outcome.cnt ++;\n   hours[\"h\"+hour].outcome.mean = hours[\"h\"+hour].outcome.sum / hours[\"h\"+hour].outcome.cnt;\n   hours[\"h\"+hour].updated = msg.payload[i].time;\n   if(msg.payload[i].mean < hours[\"h\"+hour].outcome.min) {\n       hours[\"h\"+hour].outcome.min = msg.payload[i].mean; \n   }\n   if(msg.payload[i].mean > hours[\"h\"+hour].outcome.max) {\n       hours[\"h\"+hour].outcome.max = msg.payload[i].mean; \n   }\n\n}\nmsg.payload = hours;\nflow.set(\"Generation_potential\",hours);\nreturn msg;","outputs":1,"noerr":0,"x":1290,"y":740,"wires":[[]]},{"id":"3c7b8eb4.270f92","type":"function","z":"a78dbeae.c89fa","name":"Apply History","func":"let hours = msg.hours;\nfor(let i=0;i<msg.payload.length -1 ;i++) {\n    let hour = new Date(msg.payload[i].time).getHours();\n   hours[\"h\"+hour].outcome.sum += msg.payload[i].mean;\n   hours[\"h\"+hour].outcome.cnt ++;\n   hours[\"h\"+hour].outcome.mean = hours[\"h\"+hour].outcome.sum / hours[\"h\"+hour].outcome.cnt;\n   hours[\"h\"+hour].updated = msg.payload[i].time;\n   if(msg.payload[i].mean < hours[\"h\"+hour].outcome.min) {\n       hours[\"h\"+hour].outcome.min = msg.payload[i].mean; \n   }\n   if(msg.payload[i].mean > hours[\"h\"+hour].outcome.max) {\n       hours[\"h\"+hour].outcome.max = msg.payload[i].mean; \n   }\n\n}\nmsg.payload = hours;\nflow.set(\"Consumption_potential\",hours);\nreturn msg;","outputs":1,"noerr":0,"x":1290,"y":860,"wires":[[]]},{"id":"a5614d.cc810eb","type":"inject","z":"a78dbeae.c89fa","name":"20m","repeat":"1200","crontab":"","once":true,"onceDelay":"15","topic":"","payload":"","payloadType":"date","x":110,"y":760,"wires":[["95a542d1.29b17","6ae66ddd.329794","ee69498a.deb248"]]},{"id":"86ac6e60.203ce","type":"function","z":"a78dbeae.c89fa","name":"Wirkleistung","func":"msg.payload = flow.get(\"Generation\") + msg.payload;\nconst subSUM='Consumption';\n\n\nlet sum = flow.get(subSUM) * 1;\nif(isNaN(sum)) sum = 0;\n\nlet previous = context.get(\"previous\") * 1;\nif(isNaN(previous)) previous = 0;\n\nif(flow.get(\"SaldoID\") != context.get(\"SaldoID\")) {\n    context.set(\"SaldoID\",flow.get(\"SaldoID\"));\n    flow.set(\"Sources\",flow.get(\"Sources\")+1);\n} else {\n    sum -= previous;\n}\nsum += msg.payload;\n\ncontext.set(\"previous\",msg.payload);\n\nflow.set(subSUM,sum);\nnode.status({text:msg.payload +\" W\"});\nreturn msg;","outputs":1,"noerr":0,"x":1071,"y":296,"wires":[["b4cf0b05.0d8af8"]]},{"id":"68167122.ce1b4","type":"function","z":"a78dbeae.c89fa","name":"Wirkleistung","func":"// msg.payload =  msg.payload;\nconst subSUM='Consumption';\n\n\nlet sum = flow.get(subSUM) * 1;\nif(isNaN(sum)) sum = 0;\n\nlet previous = context.get(\"previous\") * 1;\nif(isNaN(previous)) previous = 0;\n\nif(flow.get(\"SaldoID\") != context.get(\"SaldoID\")) {\n    context.set(\"SaldoID\",flow.get(\"SaldoID\"));\n    flow.set(\"Sources\",flow.get(\"Sources\")+1);\n} else {\n    sum -= previous;\n}\nsum += msg.payload;\n\ncontext.set(\"previous\",msg.payload);\n\nflow.set(subSUM,sum);\nnode.status({text:msg.payload +\" W\"});\nreturn msg;","outputs":1,"noerr":0,"x":1072,"y":356,"wires":[["b4cf0b05.0d8af8"]]},{"id":"a73d3161.14cf4","type":"influxdb out","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","name":"GSIsolar","measurement":"GSIsolar","precision":"","retentionPolicy":"","x":1420,"y":920,"wires":[]},{"id":"8c32e086.a75c1","type":"function","z":"a78dbeae.c89fa","name":"Latest Solar Index","func":"msg.payload = msg.payload.gsi.forecast[0].esolar * 1;\nreturn msg;","outputs":1,"noerr":0,"x":848,"y":920,"wires":[["a73d3161.14cf4"]]},{"id":"ee69498a.deb248","type":"msgissuer","z":"a78dbeae.c89fa","zip":"69256","x":380,"y":920,"wires":[["8c32e086.a75c1","fa9efd31.902b5","15a076cf.ebd5d9","1fa11478.3cb93c"]]},{"id":"fa9efd31.902b5","type":"function","z":"a78dbeae.c89fa","name":"Graph Erzeugung","func":"let a = [];\n\nfor(let i=0;i<msg.payload.gsi.forecast.length;i++) {\n    let item = {\n        'x':msg.payload.gsi.forecast[i].timeStamp,\n        'y':msg.payload.gsi.forecast[i].esolar\n    }\n    a.push(item);\n}\n\nmsg.graph = [{\n    'series': ['GenerationForecast'],\n    'data': [a]\n}];\nreturn msg;","outputs":1,"noerr":0,"x":628,"y":980,"wires":[["ed5b635.353bda"]]},{"id":"ed5b635.353bda","type":"function","z":"a78dbeae.c89fa","name":"Vorhersage Solar","func":"let a = [];\n\nmsg.payload = flow.get(\"Generation_potential\");\nfor(let i=0;i<msg.graph[0].data[0].length;i++) {\n    msg.graph[0].data[0][i].y *=   msg.payload[\"h\"+new Date(msg.graph[0].data[0][i].x).getHours()].outcome.mean;\n    \n    // Scale by adding min\n    let sphericPV = 0;\n    msg.graph[0].data[0][i].y += sphericPV;\n    if(msg.graph[0].data[0][i].y < msg.payload[\"h\"+new Date(msg.graph[0].data[0][i].x).getHours()].outcome.min) {\n        msg.graph[0].data[0][i].y = msg.payload[\"h\"+new Date(msg.graph[0].data[0][i].x).getHours()].outcome.min;\n    }\n    msg.graph[0].data[0][i].y = Math.round(msg.graph[0].data[0][i].y/10);\n}\n\nmsg.payload = msg.graph;\nflow.set('Generation_forecast',msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":848,"y":980,"wires":[["8a36a2fd.70f11"]]},{"id":"8a36a2fd.70f11","type":"function","z":"a78dbeae.c89fa","name":"Convert to Batch","func":"let payload = [];\n\n/*\n\nA influxdb output node to write multiple points (fields and tags) to multiple influxdb measurements.\n\nThe msg.payload needs to be an array of point objects.\n\nThe measurement property of a point contains the name of the measurement for the point. The fields property will contain the fields of the point. \nIf supplied, the tags property will contain the tags for the point. To set the time for the point, supply a timestamp property.\n\nCheck Advanced Query Options to specify a time precision and retention policy for the insertion.\n\nThe advanced query options Time Precision and Retention Policy can be overwritten using message properties msg.precision and msg.retentionPolicy.\n\n*/\nfor(let i=0;i<msg.payload[0].data[0].length;i++)\n{\n    let point = {};\n    point.measurement ='e0forecastGeneration';\n    point.fields = {};\n    point.fields.w = msg.payload[0].data[0][i].y;\n    point.timestamp = (msg.payload[0].data[0][i].x * 1000000) ;\n    payload.push(point);\n\n}\nmsg.payload = payload;\nflow.set(\"forecastGeneration\",payload);\nreturn msg;","outputs":1,"noerr":0,"x":1088,"y":980,"wires":[["1f6bff37.f1e751","dcb8a6dd.f64f88"]]},{"id":"1f6bff37.f1e751","type":"influxdb batch","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","precision":"","retentionPolicy":"","name":"e0forecastGeneration","x":1460,"y":980,"wires":[]},{"id":"69be7198.92a0b","type":"function","z":"a78dbeae.c89fa","name":"Wirkleistung","func":"msg.payload = Math.round(msg.payload);\nconst subSUM='Generation';\n\nlet sum = flow.get(subSUM) * 1;\nif(isNaN(sum)) sum = 0;\n\nlet previous = context.get(\"previous\") * 1;\nif(isNaN(previous)) previous = 0;\n\nif(flow.get(\"SaldoID\") != context.get(\"SaldoID\")) {\n    context.set(\"SaldoID\",flow.get(\"SaldoID\"));\n    flow.set(\"Sources\",flow.get(\"Sources\")+1);\n} else {\n    sum -= previous;\n}\nsum += msg.payload;\n\ncontext.set(\"previous\",msg.payload);\n\nflow.set(subSUM,sum);\nnode.status({text:msg.payload +\" W\"});\nreturn msg;","outputs":1,"noerr":0,"x":1068,"y":132,"wires":[["b4cf0b05.0d8af8"]]},{"id":"15a076cf.ebd5d9","type":"function","z":"a78dbeae.c89fa","name":"Graph Verbrauch ","func":"let a = [];\n\nfor(let i=0;i<msg.payload.gsi.forecast.length;i++) {\n    let item = {\n        'x':msg.payload.gsi.forecast[i].timeStamp,\n        'y':1\n    }\n    a.push(item);\n}\n\nmsg.graph = [{\n    'series': ['ConsumPotential'],\n    'data': [a]\n}];\nreturn msg;","outputs":1,"noerr":0,"x":628,"y":1080,"wires":[["b5fab794.1322c8"]]},{"id":"b5fab794.1322c8","type":"function","z":"a78dbeae.c89fa","name":"Vorhersage Verbrauch","func":"let a = [];\nmsg.payload = flow.get('Consumption_potential');\n\nfor(let i=0;i<msg.graph[0].data[0].length;i++) {\n    msg.graph[0].data[0][i].y = Math.round(msg.graph[0].data[0][i].y * msg.payload[\"h\"+new Date(msg.graph[0].data[0][i].x).getHours()].outcome.mean);\n}\n\nmsg.payload = msg.graph;\nflow.set('Consumption_forecast',msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":858,"y":1080,"wires":[["1c25e579.e2c25b"]]},{"id":"1c25e579.e2c25b","type":"function","z":"a78dbeae.c89fa","name":"Convert to Batch","func":"let payload = [];\n\n/*\n\nA influxdb output node to write multiple points (fields and tags) to multiple influxdb measurements.\n\nThe msg.payload needs to be an array of point objects.\n\nThe measurement property of a point contains the name of the measurement for the point. The fields property will contain the fields of the point. \nIf supplied, the tags property will contain the tags for the point. To set the time for the point, supply a timestamp property.\n\nCheck Advanced Query Options to specify a time precision and retention policy for the insertion.\n\nThe advanced query options Time Precision and Retention Policy can be overwritten using message properties msg.precision and msg.retentionPolicy.\n\n*/\nfor(let i=0;i<msg.payload[0].data[0].length;i++)\n{\n    let point = {};\n    point.measurement ='e0forecastConsumption';\n    point.fields = {};\n    point.fields.w = msg.payload[0].data[0][i].y;\n    point.timestamp = (msg.payload[0].data[0][i].x * 1000000) ;\n    payload.push(point);\n\n}\nmsg.payload = payload;\nflow.set(\"forecastConsumption\",payload)\nreturn msg;","outputs":1,"noerr":0,"x":1088,"y":1080,"wires":[["fa9f80a6.866dc"]]},{"id":"fa9f80a6.866dc","type":"influxdb batch","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","precision":"","retentionPolicy":"","name":"e0forecastConsumption","x":1470,"y":1080,"wires":[]},{"id":"48cefb5d.a10cc4","type":"function","z":"a78dbeae.c89fa","name":"Saldo","func":"let consumption = flow.get(\"forecastConsumption\");\nlet generation = flow.get(\"forecastGeneration\");\n\nfor(let i=0; i<consumption.length;i++) {\n    consumption[i].measurement = \"e0forecastSaldo\";\n    consumption[i].fields.w -= generation[i].fields.w;\n}\n\nflow.set(\"forecastSaldo\",consumption);\nmsg.payload = consumption;\nreturn msg;","outputs":1,"noerr":0,"x":808,"y":1140,"wires":[["62d2c9ed.e6e9f8","9bba1ba7.b4c438","e21d0fbc.3373f"]]},{"id":"dcb8a6dd.f64f88","type":"delay","z":"a78dbeae.c89fa","name":"2s","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":588,"y":1140,"wires":[["48cefb5d.a10cc4"]]},{"id":"62d2c9ed.e6e9f8","type":"influxdb batch","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","precision":"","retentionPolicy":"","name":"e0forecastSaldo","x":1440,"y":1140,"wires":[]},{"id":"b6437410.9c4498","type":"link out","z":"a78dbeae.c89fa","name":"Discovergy Meter","links":["97c890f2.21ca4"],"x":555,"y":520,"wires":[]},{"id":"6339456f.edec9c","type":"comment","z":"87ac7176.1bbd1","name":"Trigger","info":"","x":70,"y":33,"wires":[]},{"id":"4fd79336.0bba3c","type":"comment","z":"87ac7176.1bbd1","name":"Datenquelle","info":"","x":330,"y":33,"wires":[]},{"id":"df5867e7.8df748","type":"comment","z":"87ac7176.1bbd1","name":"Erzeugung","info":"","x":600,"y":33,"wires":[]},{"id":"631037e7.dc0648","type":"comment","z":"87ac7176.1bbd1","name":"Nutzung","info":"","x":600,"y":253,"wires":[]},{"id":"23eb79.d7a69488","type":"comment","z":"87ac7176.1bbd1","name":"Saldo","info":"","x":590,"y":481,"wires":[]},{"id":"95c2ffee.4c62d","type":"comment","z":"87ac7176.1bbd1","name":"Vorhersage","info":"","x":610,"y":701,"wires":[]},{"id":"86a62f25.ecd36","type":"function","z":"87ac7176.1bbd1","name":"SoC kWh Umrechnen","func":"msg.payload = Math.round(5500 * (msg.payload/100));\nflow.set('Saldo',msg.payload);\nnode.status({text:\"P: \"+msg.payload+\" W\"});\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":540,"wires":[["8f1a7250.280c4","ceb42f93.d015d"]]},{"id":"ceb42f93.d015d","type":"influxdb out","z":"87ac7176.1bbd1","influxdb":"50ebd7b3.3b24f8","name":"e1saldo","measurement":"e1saldo","precision":"","retentionPolicy":"","x":1240,"y":540,"wires":[]},{"id":"9bba1ba7.b4c438","type":"link out","z":"a78dbeae.c89fa","name":"e0forecastSaldo","links":["14ce6284.6c29bd"],"x":1215,"y":1120,"wires":[]},{"id":"14ce6284.6c29bd","type":"link in","z":"87ac7176.1bbd1","name":"","links":["9bba1ba7.b4c438"],"x":275,"y":760,"wires":[["beed70a.29e449"]]},{"id":"beed70a.29e449","type":"function","z":"87ac7176.1bbd1","name":"Vorhersage SoC und Flex Integration","func":"let saldo = flow.get(\"Saldo\") - flow.get(\"Consumption\");\nlet options = global.get(\"FlexOptions\");\n\nfor(let i=0; i<msg.payload.length;i++) {\n    msg.payload[i].measurement = \"e1forecastSaldo\";\n    let w = (-1) * msg.payload[i].fields.w;\n    let flex = 0;\n    \n    if(i<24) {\n        for(let j=0;j<options.length;j++) {\n             w -= options[j][i];\n             flex += options[j][i];\n        }        \n    }\n    \n    \n    if(w > 2000) w = 2000;\n    if(w < -2000) w = -2000;\n    \n    if(saldo + w > 5500) w = 5500-saldo;\n    if(saldo + w < 0) w = saldo;\n    \n    saldo += w;\n    \n    msg.payload[i].fields.w += w;\n    msg.payload[i].fields.flex = flex;\n    msg.payload[i].fields.wh = saldo;\n\n}\n\nflow.set(\"forecastSaldo\",msg.payload);\nnode.status({text:\"\"+new Date().toLocaleString()});\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":760,"wires":[["a3fb737a.13975","c129980a.1f0a28"]]},{"id":"a3fb737a.13975","type":"influxdb batch","z":"87ac7176.1bbd1","influxdb":"50ebd7b3.3b24f8","precision":"","retentionPolicy":"","name":"e1forecastSaldo","x":1260,"y":760,"wires":[]},{"id":"9fecaa70.52c7c8","type":"comment","z":"a78dbeae.c89fa","name":"GrünstromIndex","info":"","x":618,"y":1260,"wires":[]},{"id":"e21d0fbc.3373f","type":"function","z":"a78dbeae.c89fa","name":"Ebenen GSI","func":"let saldo = flow.get(\"forecastSaldo\");\nlet min = 9999999999;\nlet max = -999999999999;\n\nfor(let i=0; i<saldo.length;i++) {\n    saldo[i].measurement = \"e0gsi\";\n    if(saldo[i].fields.w > max) max = saldo[i].fields.w ;\n    if(saldo[i].fields.w < min) min = saldo[i].fields.w ;\n}\n\nlet delta = max - min;\n\nfor(let i=0; i<saldo.length;i++) {\n    saldo[i].fields.gsi = 100-Math.round(((saldo[i].fields.w  - min) / delta)*100); \n}\n\n\nflow.set(\"gsi\",saldo);\nglobal.set(\"e0gsi\",saldo);\nmsg.payload = saldo;\n\nreturn msg;","outputs":1,"noerr":0,"x":608,"y":1320,"wires":[["27c4ecb5.432a54","a76d6c8.89cb69"]]},{"id":"27c4ecb5.432a54","type":"influxdb batch","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","precision":"","retentionPolicy":"","name":"e0gsi","x":1410,"y":1320,"wires":[]},{"id":"c129980a.1f0a28","type":"function","z":"87ac7176.1bbd1","name":"Ebenen GSI","func":"let saldo = flow.get(\"forecastSaldo\");\nlet min = 9999999999;\nlet max = -999999999999;\n\nfor(let i=0; i<saldo.length;i++) {\n    saldo[i].measurement = \"e1gsi\";\n    if(saldo[i].fields.w > max) max = saldo[i].fields.w ;\n    if(saldo[i].fields.w < min) min = saldo[i].fields.w ;\n}\n\nlet delta = max - min;\n\nfor(let i=0; i<saldo.length;i++) {\n    saldo[i].fields.gsi = 100-Math.round(((saldo[i].fields.w  - min) / delta)*100); \n}\n\n\nflow.set(\"gsi\",saldo);\nmsg.payload = saldo;\nglobal.set(\"e1gsi\",saldo);\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":920,"wires":[["d20ea469.f53878","8488baf5.161268"]]},{"id":"d20ea469.f53878","type":"influxdb batch","z":"87ac7176.1bbd1","influxdb":"50ebd7b3.3b24f8","precision":"","retentionPolicy":"","name":"e1gsi","x":1230,"y":920,"wires":[]},{"id":"6af6eaf4.38c774","type":"comment","z":"87ac7176.1bbd1","name":"GrünstromIndex","info":"","x":620,"y":860,"wires":[]},{"id":"d09394fd.0694d8","type":"function","z":"87ac7176.1bbd1","name":"Wirkleistung","func":"msg.payload = Math.round(msg.payload.power_mw / 1000);\nnode.status({text:\"P: \"+msg.payload+\" W\"});\n// msg.payload =  msg.payload;\nconst subSUM='Consumption';\n\nif(isNaN(msg.payload)) msg.payload = 0;\n\nlet sum = flow.get(subSUM) * 1;\nif(isNaN(sum)) sum = 0;\n\nlet previous = context.get(\"previous\") * 1;\nif(isNaN(previous)) previous = 0;\n\nif(flow.get(\"SaldoID\") != context.get(\"SaldoID\")) {\n    context.set(\"SaldoID\",flow.get(\"SaldoID\"));\n} else {\n    sum -= previous;\n}\nsum += msg.payload;\n\ncontext.set(\"previous\",msg.payload);\n\nflow.set(subSUM,sum);\n\nreturn msg;","outputs":1,"noerr":0,"x":1070,"y":300,"wires":[[]]},{"id":"990d7af.aade388","type":"function","z":"87ac7176.1bbd1","name":"Set SaldoID for Flow","func":"flow.set(\"Consumption\",0);\nflow.set(\"Generation\",0);\nglobal.set(\"FlexConsumption\",0);\nglobal.set(\"FlexGeneration\",0);\nglobal.set(\"FlexOptions\",[]);\nflow.set(\"SaldoID\",new Date().toLocaleString());\nglobal.set(\"FlexSaldoID\",new Date().toLocaleString());\nreturn msg;","outputs":1,"noerr":0,"x":130,"y":137,"wires":[[]]},{"id":"a15162f1.0348e","type":"inject","z":"87ac7176.1bbd1","name":"OnInject + 15m","repeat":"900","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":135,"y":77,"wires":[["990d7af.aade388"]]},{"id":"8f1a7250.280c4","type":"function","z":"87ac7176.1bbd1","name":"Kapazität","func":"if(msg.payload > 2000) msg.payload = 2000;\nmsg.payload += flow.get('Consumption') + global.get('FlexConsumption');\nnode.status({text:\"P: \"+msg.payload+\" W\"});\nreturn msg;","outputs":1,"noerr":0,"x":840,"y":600,"wires":[["c0df39dd.679d88","6f70f641.fbc308"]]},{"id":"c0df39dd.679d88","type":"influxdb out","z":"87ac7176.1bbd1","influxdb":"50ebd7b3.3b24f8","name":"e1flex","measurement":"e1flex","precision":"","retentionPolicy":"","x":1230,"y":600,"wires":[]},{"id":"6f70f641.fbc308","type":"function","z":"87ac7176.1bbd1","name":"Verbrauch","func":"msg.payload = flow.get('Consumption');\nnode.status({text:\"P: \"+msg.payload+\" W\"});\nreturn msg;","outputs":1,"noerr":0,"x":1010,"y":660,"wires":[["db7eb6e9.c6deb8"]]},{"id":"db7eb6e9.c6deb8","type":"influxdb out","z":"87ac7176.1bbd1","influxdb":"50ebd7b3.3b24f8","name":"e1consumption","measurement":"e1consumption","precision":"","retentionPolicy":"","x":1260,"y":660,"wires":[]},{"id":"e92a9eba.5fdda","type":"comment","z":"a2290904.6f84c8","name":"Trigger","info":"","x":70,"y":35,"wires":[]},{"id":"425798e0.c4fba8","type":"comment","z":"a2290904.6f84c8","name":"Datenquelle","info":"","x":330,"y":35,"wires":[]},{"id":"917ab074.7e4c5","type":"comment","z":"a2290904.6f84c8","name":"Erzeugung","info":"","x":600,"y":35,"wires":[]},{"id":"882254b6.9608c8","type":"comment","z":"a2290904.6f84c8","name":"Nutzung","info":"","x":600,"y":255,"wires":[]},{"id":"f1eec7d1.7a7068","type":"comment","z":"a2290904.6f84c8","name":"Saldo","info":"","x":590,"y":483,"wires":[]},{"id":"7742e21d.a5585c","type":"comment","z":"a2290904.6f84c8","name":"Vorhersage","info":"","x":610,"y":703,"wires":[]},{"id":"872391e.b44cf7","type":"function","z":"a2290904.6f84c8","name":"Set SaldoID for Flow","func":"flow.set(\"Consumption\",0);\nflow.set(\"Generation\",0);\nflow.set(\"SaldoID\",new Date().toLocaleString());\nreturn msg;","outputs":1,"noerr":0,"x":130,"y":139,"wires":[[]]},{"id":"e7661730.c68138","type":"inject","z":"a2290904.6f84c8","name":"OnInject + 15m","repeat":"900","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":135,"y":79,"wires":[["872391e.b44cf7"]]},{"id":"97c890f2.21ca4","type":"link in","z":"a2290904.6f84c8","name":"","links":["b6437410.9c4498"],"x":355,"y":540,"wires":[["b3c7bb87.1e40a8"]]},{"id":"b3c7bb87.1e40a8","type":"function","z":"a2290904.6f84c8","name":"Netzanschluß","func":"msg.payload = msg.payload[\"781ffa307e434529be9f747eece1b8dc\"];\n\nlet power = Math.round((msg.payload.power1 + msg.payload.power2 + msg.payload.power3)/1000)\n\nmsg.payload = power * (-1);\nflow.set(\"Saldo\",msg.payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":620,"y":540,"wires":[["aa1a6ec.13cbd9"]]},{"id":"1fa11478.3cb93c","type":"link out","z":"a78dbeae.c89fa","name":"GrünStromIndex","links":["36d286f9.d9229a"],"x":553,"y":1100,"wires":[]},{"id":"25d84314.579d5c","type":"comment","z":"a2290904.6f84c8","name":"GrünstromIndex","info":"","x":620,"y":880,"wires":[]},{"id":"e36bc1b2.41ac","type":"function","z":"a2290904.6f84c8","name":"Ebenen GSI","func":"let payload = [];\n\nfor(let i=0;i<msg.payload.gsi.forecast.length;i++) {\n    let point = {};\n    point.measurement ='e2gsi';\n    point.fields = {};\n    point.fields.gsi = msg.payload.gsi.forecast[i].gsi;\n    point.timestamp = (msg.payload.gsi.forecast[i].timeStamp * 1000000) ;\n    payload.push(point);\n\n}\nmsg.payload = payload;\n\nglobal.set(\"e2gsi\",payload);\nflow.set(\"gsi\",payload);\n\nreturn msg;","outputs":1,"noerr":0,"x":610,"y":940,"wires":[["a93e98df.71b398","6b780bcb.a0c934"]]},{"id":"a93e98df.71b398","type":"influxdb batch","z":"a2290904.6f84c8","influxdb":"50ebd7b3.3b24f8","precision":"","retentionPolicy":"","name":"e2gsi","x":1230,"y":940,"wires":[]},{"id":"36d286f9.d9229a","type":"link in","z":"a2290904.6f84c8","name":"","links":["1fa11478.3cb93c"],"x":355,"y":940,"wires":[["e36bc1b2.41ac"]]},{"id":"6a45b5eb.e982ac","type":"influxdb in","z":"a78dbeae.c89fa","influxdb":"50ebd7b3.3b24f8","name":"e0generation","query":"SELECT mean(\"value\") FROM \"e0generation\" WHERE now-30 GROUP BY time(1h) fill(previous)","rawOutput":false,"precision":"","retentionPolicy":"","x":850,"y":740,"wires":[["9af0658d.340128"]]},{"id":"9af0658d.340128","type":"function","z":"a78dbeae.c89fa","name":"Update Hours Array","func":"// Create empty array if not exists\nlet hours = msg.hours;\n\nfor(let i=0;i<msg.payload.length -1 ;i++) {\n    \n   let hour = new Date(msg.payload[i].time).getHours();\n   if(hours[\"h\"+hour].latest.prod < 0 ) hours[\"h\"+hour].latest.prod = 0.001;\n   hours[\"h\"+hour].latest.prod = msg.payload[i].mean;\n   if(hours[\"h\"+hour].latest.gsi !== 0) {\n    hours[\"h\"+hour].latest.outcome = hours[\"h\"+hour].latest.prod / hours[\"h\"+hour].latest.gsi;\n    hours[\"h\"+hour].outcome.sum += hours[\"h\"+hour].latest.outcome;\n    hours[\"h\"+hour].outcome.cnt ++;\n    hours[\"h\"+hour].outcome.mean = hours[\"h\"+hour].outcome.sum / hours[\"h\"+hour].outcome.cnt;\n    if(hours[\"h\"+hour].outcome.min > hours[\"h\"+hour].latest.prod){\n        if(hours[\"h\"+hour].latest.prod>0) {\n            hours[\"h\"+hour].outcome.min = hours[\"h\"+hour].latest.prod;\n        }\n    }\n    if(hours[\"h\"+hour].outcome.min_gsi > hours[\"h\"+hour].latest.gsi){\n        if(hours[\"h\"+hour].latest.gsi>0) {\n            hours[\"h\"+hour].outcome.min_gsi = hours[\"h\"+hour].latest.gsi;\n        }\n    }\n    if(hours[\"h\"+hour].outcome.max < hours[\"h\"+hour].latest.outcome) {\n          hours[\"h\"+hour].outcome.max = hours[\"h\"+hour].latest.outcome;\n    }\n    \n   } else {\n       node.warn(\"Zero GSI\",hour);\n   }\n   hours[\"h\"+hour].updated = msg.payload[i].time;\n\n}\n// msg.payload = hours;\nmsg.hours = hours;\nreturn msg;","outputs":1,"noerr":0,"x":1070,"y":740,"wires":[["9ab82fae.22beb"]]},{"id":"aa1a6ec.13cbd9","type":"influxdb out","z":"a2290904.6f84c8","influxdb":"50ebd7b3.3b24f8","name":"e2saldo","measurement":"e2saldo","precision":"","retentionPolicy":"","x":1280,"y":540,"wires":[]},{"id":"a76d6c8.89cb69","type":"link out","z":"a78dbeae.c89fa","name":"e0gsi","links":["110ddde.bf25222"],"x":715,"y":1340,"wires":[]},{"id":"8488baf5.161268","type":"link out","z":"87ac7176.1bbd1","name":"e1gsi","links":["aa9d4b82.40b3f8"],"x":735,"y":960,"wires":[]},{"id":"6b780bcb.a0c934","type":"link out","z":"a2290904.6f84c8","name":"e2gsi","links":["17e4b579.bb08db"],"x":735,"y":980,"wires":[]},{"id":"110ddde.bf25222","type":"link in","z":"f6355d59.5bc95","name":"","links":["a76d6c8.89cb69"],"x":175,"y":460,"wires":[["5e27bb6a.a05fc4"]]},{"id":"aa9d4b82.40b3f8","type":"link in","z":"f6355d59.5bc95","name":"","links":["8488baf5.161268"],"x":175,"y":520,"wires":[["5e27bb6a.a05fc4"]]},{"id":"17e4b579.bb08db","type":"link in","z":"f6355d59.5bc95","name":"","links":["6b780bcb.a0c934"],"x":175,"y":580,"wires":[["5e27bb6a.a05fc4"]]},{"id":"fd3c3880.8df548","type":"comment","z":"f6355d59.5bc95","name":"Kombinierter GrünstromIndex","info":"","x":180,"y":400,"wires":[]},{"id":"5e27bb6a.a05fc4","type":"function","z":"f6355d59.5bc95","name":"kombinieren","func":"let e0gsi = global.get(\"e0gsi\");\nlet e1gsi = global.get(\"e1gsi\");\nlet e2gsi = global.get(\"e2gsi\");\n\nfor(let i=0; i< e0gsi.length;i++) {\n   e0gsi[i].measurement = \"eXgsi\";\n   e0gsi[i].fields.gsi = Math.round((e0gsi[i].fields.gsi + e1gsi[i].fields.gsi + e2gsi[i].fields.gsi)/3); \n}\n\nmsg.payload = e0gsi;\nreturn msg;","outputs":1,"noerr":0,"x":350,"y":520,"wires":[["a1421961.555368"]]},{"id":"cfa562d9.adbbf","type":"influxdb batch","z":"f6355d59.5bc95","influxdb":"50ebd7b3.3b24f8","precision":"","retentionPolicy":"","name":"eXgsi","x":730,"y":520,"wires":[]},{"id":"a1421961.555368","type":"function","z":"f6355d59.5bc95","name":"SmartSwitches","func":"let gsi = msg.payload;\n\nlet switches = gsi.slice(0,24);\n\nswitches.sort(function(a,b) {\n   if (a.fields.gsi > b.fields.gsi) return 1;\n   if (b.fields.gsi > a.fields.gsi) return -1;\n   return 0;\n});\n \n \nswitches = switches.reverse();\nlet rows = [];\n\nfor(let i=0;i<24;i++) {\n    let ref_gsi =gsi[i].fields.gsi;\n    for(let j=0;j<switches.length;j++) {\n        if(switches[j].fields.gsi >= ref_gsi) {\n          gsi[i].fields['s'+j] = 0;\n        } else {\n          gsi[i].fields['s'+j] = 1;\n        }\n    }\n}\n\nglobal.set(\"eXgsi\",gsi);\nflow.set(\"gsi\",gsi);\nreturn msg;","outputs":1,"noerr":0,"x":560,"y":520,"wires":[["cfa562d9.adbbf"]]},{"id":"985de929.485008","type":"function","z":"87ac7176.1bbd1","name":"Wirkleistung","func":"msg.payload *= 1;\n\nnode.status({text:\"P: \"+msg.payload+\" W\"});\n// msg.payload =  msg.payload;\nconst subSUM='Consumption';\n\n\nlet sum = flow.get(subSUM) * 1;\nif(isNaN(sum)) sum = 0;\n\nlet previous = context.get(\"previous\") * 1;\nif(isNaN(previous)) previous = 0;\n\nif(flow.get(\"SaldoID\") != context.get(\"SaldoID\")) {\n    context.set(\"SaldoID\",flow.get(\"SaldoID\"));\n} else {\n    sum -= previous;\n}\nsum += msg.payload;\n\ncontext.set(\"previous\",msg.payload);\n\nflow.set(subSUM,sum);\nnode.status({text:\"P: \"+msg.payload+\" W\"});\nreturn msg;","outputs":1,"noerr":0,"x":1070,"y":420,"wires":[[]]},{"id":"156bd78d.c42dd8","type":"mqtt out","z":"a78dbeae.c89fa","name":"e0saldo","topic":"e0saldo","qos":"1","retain":"true","broker":"986482d4.29808","x":1000,"y":660,"wires":[]},{"id":"656c8d35.7655e4","type":"ui_text_input","z":"f6355d59.5bc95","name":"","label":"Postleitzahl","tooltip":"Postleitzahl in Deutschland","group":"2b2edc5f.0d27e4","order":0,"width":0,"height":0,"passthru":true,"mode":"text","delay":300,"topic":"","x":430,"y":100,"wires":[["15273177.f6fecf"]]},{"id":"9fdf8f69.02644","type":"function","z":"f6355d59.5bc95","name":"Gespeicherte Postleitzahl","func":"msg.payload = global.get('zip')\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":160,"y":100,"wires":[["656c8d35.7655e4"]]},{"id":"15273177.f6fecf","type":"function","z":"f6355d59.5bc95","name":"Speichern der Postleitzahl","func":"global.set(\"zip\",msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":710,"y":100,"wires":[[]]}]
